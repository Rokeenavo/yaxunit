#Область СлужебныйПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
    
    ЮТТесты
        .ДобавитьТестовыйНабор("ТестДокументовПриходТовара").ВТранзакции(Истина)
			.Тег("Документы")
			.Тег("ПриходТовара")
			.ДобавитьТест("ПроверкаСозданияДокументаПриходТовара")
				.Тег("Позитив")
				.Тег("Режим записи - НовыйОбъект")
				.Представление("Проверить создание документа", Истина)
			.ДобавитьТест("ПроверкаПроведенияДокументаПриходТовара")
				.Тег("Позитив")
				.Тег("Режим записи - Проведение")
				.Представление("Проверка проведение документа", Истина)
			.ДобавитьТест("ПроверкаДвиженияВРегистрахДокументаПриходТовара")
				.Тег("Позитив")
				.Тег("Регистр - ТоварныеЗапасы")
				.Тег("Регистр - Взаиморасчеты")
				.Тег("Режим записи - Проведение")
				.Представление("Проверка что документ содержит движения по регистрам", Истина)
    ;
	ЮТТесты
        .ДобавитьТестовыйНабор("ТестДокументовРасходТовара").ВТранзакции(Истина)
			.Тег("Документы")
			.Тег("РасходТовара")
			.ДобавитьТест("ПроверкаСозданияДокументаРасходТовара")
				.Тег("Позитив")
				.Тег("Режим записи - Записать")
				.Представление("Проверить создание документа", Истина)
			.ДобавитьТест("ПроверкаПроведенияДокументаРасходТовара")
				.Тег("Позитив")
				.Тег("Режим записи - Проведение")
				.Представление("Проверка проведение документа", Истина)
			.ДобавитьТест("ПроверкаДвиженияВРегистрахДокументаРасходТовара")
				.Тег("Позитив")
				.Тег("Регистр - ТоварныеЗапасы")
				.Тег("Регистр - Взаиморасчеты") 
				.Тег("Регистр - Продажи")
				.Тег("Режим записи - Проведение")
				.Представление("Проверка что документ содержит движения по регистрам", Истина)
    ;
	
	ЮТТесты
	 .ДобавитьТестовыйНабор("ТестЗакрытияДвиженияРегистровВНуль").ВТранзакции(Истина)
			.Тег("Документы")
			.Тег("РасходТовара")
			.Тег("ПриходТовара")
			.Тег("Регистр - ТоварныеЗапасы")
			.Тег("Регистр - Взаиморасчеты") 
			.ДобавитьТест("ДвижениеВНоль", "Проверить, что движения по остаточным регистрам ТоварныеЗапасы и Взаиморасчеты выходят в ноль").ВТранзакции(Истина)
				.Тег("Документы")
				.Тег("РасходТовара")
				.Тег("ПриходТовара")
				.Тег("Регистр - ТоварныеЗапасы")
				.Тег("Регистр - Взаиморасчеты")
	;


КонецПроцедуры

#Область ДокументПриходТовара

Процедура ПроверкаСозданияДокументаПриходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументПриходТовараНовыйОбъект();
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.ПриходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Запись))
		.НеВыбрасываетИсключение()
	;
КонецПроцедуры

Процедура ПроверкаПроведенияДокументаПриходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументПриходТовараПроведение();
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.ПриходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	;
КонецПроцедуры

Процедура ПроверкаДвиженияВРегистрахДокументаПриходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументПриходТовараПроведение();
	РегистрТоварныеЗапасы = ДокументСсылка.Движения.ТоварныеЗапасы;
	РегистрВзаиморасчеты = ДокументСсылка.Движения.Взаиморасчеты;
	
	Ютест.ОжидаетЧто(РегистрТоварныеЗапасы)
		.Существует()
	;
	
	Ютест.ОжидаетЧто(РегистрВзаиморасчеты)
		.Существует()
	;
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.ПриходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	; 
	
КонецПроцедуры

#КонецОбласти 

#Область ДокументРасходТовара

Процедура ПроверкаСозданияДокументаРасходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументРасходТовараНовыйОбъект();
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.РасходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Запись))
		.НеВыбрасываетИсключение()
	;
КонецПроцедуры

Процедура ПроверкаПроведенияДокументаРасходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументРасходТовараПроведение();
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.РасходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	;
КонецПроцедуры

Процедура ПроверкаДвиженияВРегистрахДокументаРасходТовара() Экспорт
	
	ДокументСсылка = СоздатьТестовыйДокументРасходТовараПроведение();
	РегистрТоварныеЗапасы = ДокументСсылка.Движения.ТоварныеЗапасы;
	РегистрВзаиморасчеты = ДокументСсылка.Движения.Взаиморасчеты;
	РегистрПродажи = ДокументСсылка.Движения.Продажи;
	
	Ютест.ОжидаетЧто(РегистрТоварныеЗапасы)
		.Существует()
	;
	
	Ютест.ОжидаетЧто(РегистрВзаиморасчеты)
		.Существует()
	;
	
	Ютест.ОжидаетЧто(РегистрПродажи)
		.Существует()
	;
	
	ЮТест.ОжидаетЧто(ДокументСсылка)
		.ИмеетТип(Тип("ДокументОбъект.РасходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	; 
	
КонецПроцедуры

#КонецОбласти

Процедура ДвижениеВНоль() Экспорт
	
	ДокументПриход = СоздатьТестовыйДокументПриходТовараПроведение();
	ДокументРасход = ЗаполнитьРасходТовара(ДокументПриход);
	
	ЮТест.ОжидаетЧто(ДокументПриход)
		.ИмеетТип(Тип("ДокументОбъект.ПриходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	;
	
	ЮТест.ОжидаетЧто(ДокументРасход)
		.ИмеетТип(Тип("ДокументОбъект.РасходТовара"))
		.Метод("Записать", ЮТМетоды.МассивПараметров(РежимЗаписиДокумента.Проведение))
		.НеВыбрасываетИсключение()
	;
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.Взаиморасчеты.Остатки";
	ОписаниеЗапроса.Условия.Добавить("Контрагент = &Контрагент");
	ОписаниеЗапроса.Условия.Добавить("Валюта = &Валюта");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Валюта", ДокументПриход.Валюта);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Контрагент", ДокументПриход.Организация);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("СуммаОстаток");
	
	ЮТест.ОжидаетЧто((ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)))
		.НеЗаполнено()
	;
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрНакопления.ТоварныеЗапасы.Остатки";
	ОписаниеЗапроса.Условия.Добавить("Склад = &Склад");
	ОписаниеЗапроса.Условия.Добавить("Товар = &Товар");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Склад", ДокументПриход.Склад);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Товар", ДокументПриход.Товары[0].Товар);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КоличествоОстаток");
	
	ЮТест.ОжидаетЧто((ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса)))
		.НеЗаполнено()
	;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДокументПриходТовара

Функция СоздатьТестовыйДокументПриходТовараНовыйОбъект() 
		
	НоваяСсылка = ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")	 
		.ФикцияОбязательныхПолей()
		.ТабличнаяЧасть("Товары")
			.ДобавитьСтроку()
				.ФикцияНезаполненных("Товар, Цена, Количество, Сумма")
		.НовыйОбъект()
		;
		
	Возврат НоваяСсылка;
	
КонецФункции

Функция СоздатьТестовыйДокументПриходТовараПроведение() 
		
	НоваяСсылка = ЮТест.Данные().КонструкторОбъекта("Документ.ПриходТовара")	 
		.ФикцияОбязательныхПолей()
		.ТабличнаяЧасть("Товары")
			.ДобавитьСтроку()
				.ФикцияНезаполненных("Товар, Цена, Количество, Сумма")
		.Провести(Истина)
		;
		
	Возврат НоваяСсылка;
	
КонецФункции

#КонецОбласти

#Область ДокументРасходТовара

Функция СоздатьТестовыйДокументРасходТовараНовыйОбъект() 
		
	НоваяСсылка = ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")	 
		.ФикцияОбязательныхПолей()
		.ТабличнаяЧасть("Товары")
			.ДобавитьСтроку()
				.ФикцияНезаполненных("Товар, Цена, Количество, Сумма")
		.НовыйОбъект()
		;
		
	Возврат НоваяСсылка;
	
КонецФункции

Функция СоздатьТестовыйДокументРасходТовараПроведение() 
		
	НоваяСсылка = ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")	 
		.ФикцияОбязательныхПолей()
		.ТабличнаяЧасть("Товары")
			.ДобавитьСтроку()
				.ФикцияНезаполненных("Товар, Цена, Количество, Сумма")
		.Провести(Истина)
		;
		
	Возврат НоваяСсылка;
	
КонецФункции

#КонецОбласти

Функция ЗаполнитьРасходТовара(ДокументСсылка)
	
	
	
	НоваяСсылка = ЮТест.Данные().КонструкторОбъекта("Документ.РасходТовара")	 
	.ФикцияОбязательныхПолей()
	.Установить("Склад", ДокументСсылка.Склад) 
	.Установить("Валюта", ДокументСсылка.Валюта)
	.Установить("Организация", ДокументСсылка.Организация)
	.ТабличнаяЧасть("Товары")
		.ДобавитьСтроку()
			.Установить("Товар", ДокументСсылка.Товары[0].Товар) 
			.Установить("Цена", ДокументСсылка.Товары[0].Цена) 
			.Установить("Количество", ДокументСсылка.Товары[0].Количество) 
			.Установить("Сумма", ДокументСсылка.Товары[0].Сумма)
	.Провести(Истина)
	;
		
	Возврат НоваяСсылка;
	
КонецФункции

#КонецОбласти

